DDL 1 

CREATOR TABLE STUDENT(

ID_STUDENT NUMBER GENERATED BY DEFAULT ON NULL PRIMARY KEY,

NOME VARCHAR(100),
EMAIL VARCHAR(100),
);

CREATOR TABLE COURSE(

ID_COURSE NUMBER GENERATED BY DEFAULT IN NULL PRIMARY KEY,

TITLE VARCHAR(100),
CREDITS NUMBER(100) NOT NULL,
);

CREATOR TABLE ENROLLMENT(

ID_ENROLLMENT NUMBER GENERATED BY DEFAULT ON NULL PRIMARY KEY,

NOME VARCHAR(100),
CURSO VARCHAR(100),
DATA_HORA DATE NOT NULL CHECK (DATA_HORA <= SYSDATE),
STATUS VARCHAR(20) CHECK (STATUS IN ('EM ANDAMENTO','CURSANDO','CONCLUIDO')),

FOREING KEY (ID_STUDENT) REFERENCENS STUDENT (ID_STUDENT)
FORING KEY (ID_COURSE) REFERENCES COURSE (ID_COURSE)
);

DDL 2

-- Tabela EMPLOYEE
CREATE TABLE EMPLOYEE (
    employeeId VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

-- Tabela DEPENDENT
CREATE TABLE DEPENDENT (
    dependentId VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    employeeId VARCHAR(50),
    FOREIGN KEY (employeeId) REFERENCES EMPLOYEE(employeeId)
);

-- Tabela EMPLOYEE_ADDRESS
CREATE TABLE EMPLOYEE_ADDRESS (
    addressId VARCHAR(50) PRIMARY KEY,
    employeeId VARCHAR(50) UNIQUE,
    street VARCHAR(200),
    FOREIGN KEY (employeeId) REFERENCES EMPLOYEE(employeeId)
);

-- Tabela JOB_HISTORY
CREATE TABLE JOB_HISTORY (
    historyId VARCHAR(50) PRIMARY KEY,
    employeeId VARCHAR(50),
    position VARCHAR(100),
    FOREIGN KEY (employeeId) REFERENCES EMPLOYEE(employeeId)
);

-- Tabela DEPARTMENT
CREATE TABLE DEPARTMENT (
    deptId VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100)
);

-- Tabela POSITION
CREATE TABLE POSITION (
    posId VARCHAR(50) PRIMARY KEY,
    title VARCHAR(100)
);

-- Tabela PROJECT
CREATE TABLE PROJECT (
    projId VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100),
    employeeId VARCHAR(50),
    FOREIGN KEY (employeeId) REFERENCES EMPLOYEE(employeeId)
);

-- Tabela CLIENT
CREATE TABLE CLIENT (
    clientId VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100)
);

-- Tabela INVOICE
CREATE TABLE INVOICE (
    invoiceId VARCHAR(50) PRIMARY KEY,
    clientId VARCHAR(50),
    amount DECIMAL(10,2),
    FOREIGN KEY (clientId) REFERENCES CLIENT(clientId)
);

DDL 3

-- Tabela ALUNO
CREATE TABLE ALUNO (
    RA VARCHAR(20) PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    curso VARCHAR(100),
    email VARCHAR(100) UNIQUE
);

-- Tabela AUTOR
CREATE TABLE AUTOR (
    id_autor INT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    nacionalidade VARCHAR(50)
);

-- Tabela LIVRO
CREATE TABLE LIVRO (
    ISBN VARCHAR(20) PRIMARY KEY,
    titulo VARCHAR(200) NOT NULL,
    ano_publicacao INT
);

-- Tabela de associação LIVRO_AUTOR (para o relacionamento N:N)
CREATE TABLE LIVRO_AUTOR (
    ISBN VARCHAR(20),
    id_autor INT,
    PRIMARY KEY (ISBN, id_autor),
    FOREIGN KEY (ISBN) REFERENCES LIVRO(ISBN),
    FOREIGN KEY (id_autor) REFERENCES AUTOR(id_autor)
);

-- Tabela EXEMPLAR
CREATE TABLE EXEMPLAR (
    id_exemplar INT PRIMARY KEY,
    ISBN VARCHAR(20),
    estado VARCHAR(50),
    disponibilidade BOOLEAN,
    FOREIGN KEY (ISBN) REFERENCES LIVRO(ISBN)
);

-- Tabela EMPRESTIMO
CREATE TABLE EMPRESTIMO (
    id_emprestimo INT PRIMARY KEY,
    RA VARCHAR(20),
    id_exemplar INT,
    data_retirada DATE NOT NULL,
    data_prevista DATE,
    data_devolucao DATE,
    FOREIGN KEY (RA) REFERENCES ALUNO(RA),
    FOREIGN KEY (id_exemplar) REFERENCES EXEMPLAR(id_exemplar)
);
